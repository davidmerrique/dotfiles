[branch]
	sort=-committerdate  # DESC
[push]
	default = current
[color]
	ui = auto
[alias]
	create-branch = !sh -c 'git push origin HEAD:refs/heads/$1 && git fetch origin && git branch --track $1 origin/$1 && cd . && git checkout $1' -
	delete-branch = !sh -c 'git push origin :refs/heads/$1 && git remote prune origin && git branch -D $1' -
	merge-branch = !git checkout master && git merge @{-1}
	fetchall = "!f() { for branch in `git branch -a | grep remotes | grep -v HEAD | grep -v master`; do git branch --track ${branch##*/} $branch; done; git fetch --all; git pull --all; }; f"
	scrub = "!f() { filter=\"git rm --cached --ignore-unmatch $1\" git filter-branch --force --index-filter \"$filter\" --prune-empty --tag-name-filter cat -- --all; }; f"
	# commit with Jira ticket ID tag in commit message.
	# current branch name has to start with a valid Jira ticket ID, in upper case.
	c = "!f() { \
			if [[ -z $1 ]]; \
			then \
					echo "Error: No commit message provided."; \
					exit 1; \
			else \
					local ticketId=$(git rev-parse --abbrev-ref HEAD | grep -Eo "^[A-Z]+-[0-9]+"); \
					if [[ -z $ticketId ]]; \
					then git commit -m $1 ${@:2}; \
					else git commit -m \"$ticketId $1\" ${@:2}; \
					fi; \
			fi; \
	}; f"
[core]
	excludesfile = ~/.gitignore
	autocrlf = input
	editor = vim
	ignorecase = false
[fetch]
	prune = true
[rebase]
	autosquash = true
[include]
	path = ~/.gitconfig.local
[filter "lfs"]
	clean = git-lfs clean %f
	smudge = git-lfs smudge %f
	required = true
[http "https://gopkg.in"]
	followRedirects = true
[credential]
	helper = osxkeychain
[user]
	name = David Merrique
	email = david.merrique@gmail.com
[pull]
	rebase = false
