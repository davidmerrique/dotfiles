[hub]
  protocol = https
[user]
	name = David Merrique
	email = david.merrique@gmail.com
  helper = osxkeychain
[credential]
[alias]
  co = checkout
  promote = !$DOTFILES/bin/git-promote
  wtf     = !$DOTFILES/bin/git-wtf
  rank-contributers = !$DOTFILES/bin/git-rank-contributers
  count   = !git shortlog -sn
  aa = add --all
  ap = add --patch
  ca = commit --amend
  ci = commit -v
  co = checkout
  create-branch = !sh -c 'git push origin HEAD:refs/heads/$1 && git fetch origin && git branch --track $1 origin/$1 && cd . && git checkout $1' -
  delete-branch = !sh -c 'git push origin :refs/heads/$1 && git remote prune origin && git branch -D $1' -
  merge-branch = !git checkout master && git merge @{-1}
  pr = !hub pull-request
  st = status
  up = !git fetch origin && git rebase origin/master
  graph = log --all --graph --decorate --oneline -n30
  ls = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate
  ll = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --numstat
  lds = log --pretty=format:"%C(yellow)%h\\ %ad%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=short
  ld = log --pretty=format:"%C(yellow)%h\\ %ad%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=relative
  f = "!git ls-files | grep -i"
  grep = grep -Ii
  gr = grep -Ii
  la = "!git config -l | grep alias | cut -c 7-"
  done = "!f() { git branch | grep "$1" | cut -c 3- | grep -v done | xargs -I{} git branch -m {} done-{}; }; f"

  # If you interact with big corporate projects - like Java projects under
  # Subversion - you might run into the need to ignore certain files which
  # are under subversion control but you need to modify them but not commit.
  # The assume-unchanged flag comes to the rescue.
  assume = update-index --assume-unchanged
  unassume = update-index --no-assume-unchanged
  assumed = "!git ls-files -v | grep ^h | cut -c 3-"
  unassumeall = "!git assumed | xargs git update-index --no-assume-unchanged"
  assumeall = "!git st -s | awk {'print $2'} | xargs git assume"

  lasttag = describe --tags --abbrev=0
  lt = describe --tags --abbrev=0
[color]
  diff = auto
  status = auto
  branch = auto
  ui = true
[core]
  excludesfile = ~/.gitignore
  editor = vim
	autocrlf = input
[apply]
  whitespace = nowarn
[mergetool]
  keepBackup = false
[difftool]
  prompt = false
[help]
  autocorrect = 1
[push]
	default = simple
# [merge]
#   ff = only
